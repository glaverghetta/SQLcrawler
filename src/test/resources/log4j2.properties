# Root logger option  
rootLogger=info, stdout

#Turn on debugging only for our app
logger.app.name = usf.edu.bronie.sqlcrawler
logger.app.level = debug
  
# Direct log messages to stdout
appender.stdout.name=stdout
appender.stdout.type=Console
appender.stdout.layout.type=PatternLayout
appender.stdout.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# To turn on/off performance timing, switch info/off
logger.GithubAPILogger=off, GithubAPI
logger.NetworkLogger=off, Network
logger.GithubThrottlingLogger=off, GithubThrottling
logger.PageLogger=off, Page
logger.FileLogger=off, File
logger.AnalyzerLogger=off, Analyzer
logger.FrameLogger=off, Frame
logger.FinalLogger=off, Final

logger.GithubAPILogger.name = GithubAPILogger
logger.NetworkLogger.name = NetworkLogger
logger.GithubThrottlingLogger.name = GithubThrottlingLogger
logger.PageLogger.name = PageLogger
logger.FileLogger.name = FileLogger
logger.AnalyzerLogger.name = AnalyzerLogger
logger.FrameLogger.name = FrameLogger
logger.FinalLogger.name = FinalLogger

# Define the appenders for the timing loggers

# Github API Logger logs the network and processing time for a Github API call
appender.GithubAPI.name = GithubAPI
appender.GithubAPI.type = File
appender.GithubAPI.layout.type=PatternLayout
appender.GithubAPI.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.GithubAPI.fileName = logs/GithubAPI_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.GithubAPI.createOnDemand = true
logger.GithubAPILogger.additivity=false

# Networking Logger logs all networking calls without processing
appender.Network.name = Network
appender.Network.type = File
appender.Network.layout.type=PatternLayout
appender.Network.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.Network.fileName = logs/Network_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.Network.createOnDemand = true
logger.NetworkLogger.additivity=false

# Github Throttling Logger tracks API limitations, including secondary limits
appender.GithubThrottling.name = GithubThrottling
appender.GithubThrottling.type = File
appender.GithubThrottling.layout.type=PatternLayout
appender.GithubThrottling.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.GithubThrottling.fileName = logs/GithubThrottling_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.GithubThrottling.createOnDemand = true
logger.GithubThrottlingLogger.additivity=false

# Page Logger, tracks details and timing at page level
appender.Page.name = Page
appender.Page.type = File
appender.Page.layout.type=PatternLayout
appender.Page.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.Page.fileName = logs/Page_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.Page.createOnDemand = true
logger.PageLogger.additivity=false

# File Logger, tracks details and timing at file level
appender.File.name = File
appender.File.type = File
appender.File.layout.type=PatternLayout
appender.File.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.File.fileName = logs/File_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.File.createOnDemand = true
logger.FileLogger.additivity=false

# Analyzer Logger, tracks details and timing for each inidividual analyzer
appender.Analyzer.name = Analyzer
appender.Analyzer.type = File
appender.Analyzer.layout.type=PatternLayout
appender.Analyzer.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.Analyzer.fileName = logs/Analyzer_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.Analyzer.createOnDemand = true
logger.AnalyzerLogger.additivity=false

# Frame Logger, tracks details and timing at frame level
appender.Frame.name = Frame
appender.Frame.type = File
appender.Frame.layout.type=PatternLayout
appender.Frame.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.Frame.fileName = logs/Frame_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.Frame.createOnDemand = true
logger.FrameLogger.additivity=false

# Final Logger, also includes all console logging with runtime summary at end 
appender.Final.name = Final
appender.Final.type = File
appender.Final.layout.type=PatternLayout
appender.Final.layout.pattern = %d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} ~ %m%n
appender.Final.fileName = logs/Final_${date:yyyy-MM-dd-HH-mm-ss}.log
appender.Final.createOnDemand = true
logger.FinalLogger.additivity=false